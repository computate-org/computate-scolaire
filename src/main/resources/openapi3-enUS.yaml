openapi: 3.0.0
info:
  title: "computate-scolaire"
  version: 3.0.0
servers:
  - url: https://scolaire-dev.computate.org:10380
paths:
  /api/mission:
    post:
      operationId: postMission
      x-vertx-event-bus: enUSMission
      description: >+
      summary: >+
      tags:
        - EducationMission
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTMissionRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTMissionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchMission
      x-vertx-event-bus: enUSMission
      description: >+
      summary: >+
      tags:
        - EducationMission
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHMissionRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHMissionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/mission/{id}:
    get:
      operationId: rechercheMission
      x-vertx-event-bus: enUSMission
      description: >+
      summary: >+
      tags:
        - EducationMission
      parameters:
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/RechercheMissionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: getMission
      x-vertx-event-bus: enUSMission
      description: >+
      summary: >+
      tags:
        - EducationMission
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETMissionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteMission
      x-vertx-event-bus: enUSMission
      description: >+
      summary: >+
      tags:
        - EducationMission
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETEMissionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /age:
    get:
      operationId: searchpageSchoolAge
      x-vertx-event-bus: enUSSchoolAge
      description: >+
      summary: >+
      tags:
        - Age
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolAgeResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /age/{id}:
    get:
      operationId: searchpageSchoolAgeId
      x-vertx-event-bus: enUSSchoolAge
      description: >+
      summary: >+
      tags:
        - Age
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolAgeResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/age:
    post:
      operationId: postSchoolAge
      x-vertx-event-bus: enUSSchoolAge
      description: >+
      summary: >+
      tags:
        - Age
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSchoolAgeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSchoolAgeResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSchoolAge
      x-vertx-event-bus: enUSSchoolAge
      description: >+
      summary: >+
      tags:
        - Age
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSchoolAgeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSchoolAgeResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSchoolAge
      x-vertx-event-bus: enUSSchoolAge
      description: >+
      summary: >+
      tags:
        - Age
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSchoolAgeResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/age/{id}:
    get:
      operationId: getSchoolAge
      x-vertx-event-bus: enUSSchoolAge
      description: >+
      summary: >+
      tags:
        - Age
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSchoolAgeResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteSchoolAge
      x-vertx-event-bus: enUSSchoolAge
      description: >+
      summary: >+
      tags:
        - Age
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETESchoolAgeResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/user:
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: enUSSiteUser
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: enUSSiteUser
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: enUSSiteUser
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/block:
    post:
      operationId: postSchoolBlock
      x-vertx-event-bus: enUSSchoolBlock
      description: >+
      summary: >+
      tags:
        - Block
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSchoolBlockRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSchoolBlockResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSchoolBlock
      x-vertx-event-bus: enUSSchoolBlock
      description: >+
      summary: >+
      tags:
        - Block
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSchoolBlockRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSchoolBlockResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSchoolBlock
      x-vertx-event-bus: enUSSchoolBlock
      description: >+
      summary: >+
      tags:
        - Block
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSchoolBlockResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/block/{id}:
    get:
      operationId: getSchoolBlock
      x-vertx-event-bus: enUSSchoolBlock
      description: >+
      summary: >+
      tags:
        - Block
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSchoolBlockResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteSchoolBlock
      x-vertx-event-bus: enUSSchoolBlock
      description: >+
      summary: >+
      tags:
        - Block
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETESchoolBlockResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /block:
    get:
      operationId: searchpageSchoolBlock
      x-vertx-event-bus: enUSSchoolBlock
      description: >+
      summary: >+
      tags:
        - Block
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolBlockResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /block/{id}:
    get:
      operationId: searchpageSchoolBlockId
      x-vertx-event-bus: enUSSchoolBlock
      description: >+
      summary: >+
      tags:
        - Block
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolBlockResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster:
    post:
      operationId: postCluster
      x-vertx-event-bus: enUSCluster
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - Cluster
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchCluster
      x-vertx-event-bus: enUSCluster
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchCluster
      x-vertx-event-bus: enUSCluster
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster/{id}:
    get:
      operationId: getCluster
      x-vertx-event-bus: enUSCluster
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteCluster
      x-vertx-event-bus: enUSCluster
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETEClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /cluster:
    get:
      operationId: searchpageCluster
      x-vertx-event-bus: enUSCluster
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /cluster/{id}:
    get:
      operationId: searchpageClusterId
      x-vertx-event-bus: enUSCluster
      security:
        - openIdConnect:
          - SiteAdmin
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/school:
    post:
      operationId: postSchool
      x-vertx-event-bus: enUSSchool
      description: >+
      summary: >+
      tags:
        - School
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSchoolRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSchoolResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSchool
      x-vertx-event-bus: enUSSchool
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSchoolRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSchoolResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSchool
      x-vertx-event-bus: enUSSchool
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSchoolResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/school/{id}:
    get:
      operationId: getSchool
      x-vertx-event-bus: enUSSchool
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSchoolResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteSchool
      x-vertx-event-bus: enUSSchool
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETESchoolResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /school:
    get:
      operationId: searchpageSchool
      x-vertx-event-bus: enUSSchool
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /school/{id}:
    get:
      operationId: searchpageSchoolId
      x-vertx-event-bus: enUSSchool
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/year:
    post:
      operationId: postSchoolYear
      x-vertx-event-bus: enUSSchoolYear
      description: >+
      summary: >+
      tags:
        - School
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSchoolYearRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSchoolYearResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSchoolYear
      x-vertx-event-bus: enUSSchoolYear
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSchoolYearRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSchoolYearResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSchoolYear
      x-vertx-event-bus: enUSSchoolYear
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSchoolYearResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/year/{id}:
    get:
      operationId: getSchoolYear
      x-vertx-event-bus: enUSSchoolYear
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSchoolYearResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteSchoolYear
      x-vertx-event-bus: enUSSchoolYear
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETESchoolYearResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /year:
    get:
      operationId: searchpageSchoolYear
      x-vertx-event-bus: enUSSchoolYear
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolYearResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /year/{id}:
    get:
      operationId: searchpageSchoolYearId
      x-vertx-event-bus: enUSSchoolYear
      description: >+
      summary: >+
      tags:
        - School
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolYearResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/session:
    post:
      operationId: postSchoolSession
      x-vertx-event-bus: enUSSchoolSession
      description: >+
      summary: >+
      tags:
        - Season
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSchoolSessionRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSchoolSessionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSchoolSession
      x-vertx-event-bus: enUSSchoolSession
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSchoolSessionRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSchoolSessionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSchoolSession
      x-vertx-event-bus: enUSSchoolSession
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSchoolSessionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/session/{id}:
    get:
      operationId: getSchoolSession
      x-vertx-event-bus: enUSSchoolSession
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSchoolSessionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteSchoolSession
      x-vertx-event-bus: enUSSchoolSession
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETESchoolSessionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /session:
    get:
      operationId: searchpageSchoolSession
      x-vertx-event-bus: enUSSchoolSession
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolSessionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /session/{id}:
    get:
      operationId: searchpageSchoolSessionId
      x-vertx-event-bus: enUSSchoolSession
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolSessionResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/season:
    post:
      operationId: postSchoolSeason
      x-vertx-event-bus: enUSSchoolSeason
      description: >+
      summary: >+
      tags:
        - Season
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSchoolSeasonRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSchoolSeasonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSchoolSeason
      x-vertx-event-bus: enUSSchoolSeason
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSchoolSeasonRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSchoolSeasonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchSchoolSeason
      x-vertx-event-bus: enUSSchoolSeason
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSchoolSeasonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/season/{id}:
    get:
      operationId: getSchoolSeason
      x-vertx-event-bus: enUSSchoolSeason
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETSchoolSeasonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    delete:
      operationId: deleteSchoolSeason
      x-vertx-event-bus: enUSSchoolSeason
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DELETESchoolSeasonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /season:
    get:
      operationId: searchpageSchoolSeason
      x-vertx-event-bus: enUSSchoolSeason
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolSeasonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /season/{id}:
    get:
      operationId: searchpageSchoolSeasonId
      x-vertx-event-bus: enUSSchoolSeason
      description: >+
      summary: >+
      tags:
        - Season
      parameters:
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSchoolSeasonResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
components:
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://sso.computate.org/auth/realms/COMPUTATE.ORG/.well-known/openid-configuration
  requestBodies:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    POSTMissionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTMissionRequest'
    POSTMissionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTMissionResponse'
    PATCHMissionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHMissionRequest'
    PATCHMissionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHMissionResponse'
    RechercheMissionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/RechercheMissionResponse'
    GETMissionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETMissionResponse'
    DELETEMissionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEMissionResponse'
    SearchPageSchoolAgeResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSchoolAgeResponse'
    POSTSchoolAgeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSchoolAgeRequest'
    POSTSchoolAgeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSchoolAgeResponse'
    PATCHSchoolAgeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSchoolAgeRequest'
    PATCHSchoolAgeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSchoolAgeResponse'
    SearchSchoolAgeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSchoolAgeResponse'
    GETSchoolAgeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSchoolAgeResponse'
    DELETESchoolAgeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETESchoolAgeResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
    POSTSchoolBlockRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSchoolBlockRequest'
    POSTSchoolBlockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSchoolBlockResponse'
    PATCHSchoolBlockRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSchoolBlockRequest'
    PATCHSchoolBlockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSchoolBlockResponse'
    SearchSchoolBlockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSchoolBlockResponse'
    GETSchoolBlockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSchoolBlockResponse'
    DELETESchoolBlockResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETESchoolBlockResponse'
    SearchPageSchoolBlockResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSchoolBlockResponse'
    POSTClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTClusterRequest'
    POSTClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTClusterResponse'
    PATCHClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHClusterRequest'
    PATCHClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHClusterResponse'
    SearchClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchClusterResponse'
    GETClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETClusterResponse'
    DELETEClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETEClusterResponse'
    SearchPageClusterResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageClusterResponse'
    POSTSchoolRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSchoolRequest'
    POSTSchoolResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSchoolResponse'
    PATCHSchoolRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSchoolRequest'
    PATCHSchoolResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSchoolResponse'
    SearchSchoolResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSchoolResponse'
    GETSchoolResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSchoolResponse'
    DELETESchoolResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETESchoolResponse'
    SearchPageSchoolResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSchoolResponse'
    POSTSchoolYearRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSchoolYearRequest'
    POSTSchoolYearResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSchoolYearResponse'
    PATCHSchoolYearRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSchoolYearRequest'
    PATCHSchoolYearResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSchoolYearResponse'
    SearchSchoolYearResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSchoolYearResponse'
    GETSchoolYearResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSchoolYearResponse'
    DELETESchoolYearResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETESchoolYearResponse'
    SearchPageSchoolYearResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSchoolYearResponse'
    POSTSchoolSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSchoolSessionRequest'
    POSTSchoolSessionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSchoolSessionResponse'
    PATCHSchoolSessionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSchoolSessionRequest'
    PATCHSchoolSessionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSchoolSessionResponse'
    SearchSchoolSessionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSchoolSessionResponse'
    GETSchoolSessionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSchoolSessionResponse'
    DELETESchoolSessionResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETESchoolSessionResponse'
    SearchPageSchoolSessionResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSchoolSessionResponse'
    POSTSchoolSeasonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSchoolSeasonRequest'
    POSTSchoolSeasonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSchoolSeasonResponse'
    PATCHSchoolSeasonRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSchoolSeasonRequest'
    PATCHSchoolSeasonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSchoolSeasonResponse'
    SearchSchoolSeasonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSchoolSeasonResponse'
    GETSchoolSeasonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSchoolSeasonResponse'
    DELETESchoolSeasonResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DELETESchoolSeasonResponse'
    SearchPageSchoolSeasonResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSchoolSeasonResponse'
  schemas:
    POSTMissionRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            missionNom:
              type: string
            ecoleNumeroTelephone:
              type: string
            missionId:
              type: string
            pageUri:
              type: string
    POSTMissionResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            missionNom:
              type: string
            ecoleNumeroTelephone:
              type: string
            missionId:
              type: string
            pageUri:
              type: string
    PATCHMissionRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setMissionNom:
              type: string
            removeMissionNom:
              type: string
            removeAllMissionNom:
              type: string
            setEcoleNumeroTelephone:
              type: string
            removeEcoleNumeroTelephone:
              type: string
            removeAllEcoleNumeroTelephone:
              type: string
            setMissionId:
              type: string
            removeMissionId:
              type: string
            removeAllMissionId:
              type: string
            setPageUri:
              type: string
            removePageUri:
              type: string
            removeAllPageUri:
              type: string
    PATCHMissionResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setMissionNom:
              type: string
            removeMissionNom:
              type: string
            removeAllMissionNom:
              type: string
            setEcoleNumeroTelephone:
              type: string
            removeEcoleNumeroTelephone:
              type: string
            removeAllEcoleNumeroTelephone:
              type: string
            setMissionId:
              type: string
            removeMissionId:
              type: string
            removeAllMissionId:
              type: string
            setPageUri:
              type: string
            removePageUri:
              type: string
            removeAllPageUri:
              type: string
    RechercheMissionResponse:
      allOf:
        - $ref: "#/components/schemas/"
        - type: object
          properties:
            missionNom:
              type: string
            ecoleNumeroTelephone:
              type: string
            missionId:
              type: string
            pageUri:
              type: string
    GETMissionResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            missionNom:
              type: string
            ecoleNumeroTelephone:
              type: string
            missionId:
              type: string
            pageUri:
              type: string
    DELETEMissionResponse:
      allOf:
        - $ref: "#/components/schemas/DELETEClusterResponse"
        - type: object
          properties:
            missionNom:
              type: string
            ecoleNumeroTelephone:
              type: string
            missionId:
              type: string
            pageUri:
              type: string
    SearchPageSchoolAgeResponse:
      allOf:
        - type: string
    POSTSchoolAgeRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            ageNameComplete:
              type: string
            ageId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    POSTSchoolAgeResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            ageNameComplete:
              type: string
            ageId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    PATCHSchoolAgeRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setAnneeCle:
              type: number
            removeAnneeCle:
              type: number
            removeAllAnneeCle:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setSessionKey:
              type: number
            removeSessionKey:
              type: number
            removeAllSessionKey:
              type: number
            setAgeKey:
              type: number
            removeAgeKey:
              type: number
            removeAllAgeKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setBlockKeys:
              type: array
              items:
                type: number
            removeBlockKeys:
              type: number
            removeAllBlockKeys:
              type: array
              items:
                type: number
            addBlockKeys:
              type: number
            addAllBlockKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSessionSort:
              type: number
            removeSessionSort:
              type: number
            removeAllSessionSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setSeasonEnd:
              type: string
            removeSeasonEnd:
              type: string
            removeAllSeasonEnd:
              type: string
            setSessionStartDay:
              type: string
            removeSessionStartDay:
              type: string
            removeAllSessionStartDay:
              type: string
            setSessionEndDay:
              type: string
            removeSessionEndDay:
              type: string
            removeAllSessionEndDay:
              type: string
            setSessionNameComplete:
              type: string
            removeSessionNameComplete:
              type: string
            removeAllSessionNameComplete:
              type: string
            setAgeStart:
              type: number
            removeAgeStart:
              type: number
            removeAllAgeStart:
              type: number
            setAgeEnd:
              type: number
            removeAgeEnd:
              type: number
            removeAllAgeEnd:
              type: number
            setAgeNameComplete:
              type: string
            removeAgeNameComplete:
              type: string
            removeAllAgeNameComplete:
              type: string
            setAgeId:
              type: string
            removeAgeId:
              type: string
            removeAllAgeId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    PATCHSchoolAgeResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setAnneeCle:
              type: number
            removeAnneeCle:
              type: number
            removeAllAnneeCle:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setSessionKey:
              type: number
            removeSessionKey:
              type: number
            removeAllSessionKey:
              type: number
            setAgeKey:
              type: number
            removeAgeKey:
              type: number
            removeAllAgeKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setBlockKeys:
              type: array
              items:
                type: number
            removeBlockKeys:
              type: number
            removeAllBlockKeys:
              type: array
              items:
                type: number
            addBlockKeys:
              type: number
            addAllBlockKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSessionSort:
              type: number
            removeSessionSort:
              type: number
            removeAllSessionSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setSeasonEnd:
              type: string
            removeSeasonEnd:
              type: string
            removeAllSeasonEnd:
              type: string
            setSessionStartDay:
              type: string
            removeSessionStartDay:
              type: string
            removeAllSessionStartDay:
              type: string
            setSessionEndDay:
              type: string
            removeSessionEndDay:
              type: string
            removeAllSessionEndDay:
              type: string
            setSessionNameComplete:
              type: string
            removeSessionNameComplete:
              type: string
            removeAllSessionNameComplete:
              type: string
            setAgeStart:
              type: number
            removeAgeStart:
              type: number
            removeAllAgeStart:
              type: number
            setAgeEnd:
              type: number
            removeAgeEnd:
              type: number
            removeAllAgeEnd:
              type: number
            setAgeNameComplete:
              type: string
            removeAgeNameComplete:
              type: string
            removeAllAgeNameComplete:
              type: string
            setAgeId:
              type: string
            removeAgeId:
              type: string
            removeAllAgeId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    SearchSchoolAgeResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              schoolKey:
                type: number
              anneeCle:
                type: number
              seasonKey:
                type: number
              sessionKey:
                type: number
              ageKey:
                type: number
              enrollmentKeys:
                type: array
                items:
                  type: number
              blockKeys:
                type: array
                items:
                  type: number
              educationSort:
                type: number
              schoolSort:
                type: number
              yearSort:
                type: number
              seasonSort:
                type: number
              sessionSort:
                type: number
              schoolNameComplete:
                type: string
              yearStart:
                type: string
              yearEnd:
                type: string
              seasonStartDay:
                type: string
              seasonSummer:
                type: boolean
              seasonWinter:
                type: boolean
              seasonEnrollmentFee:
                type: number
              seasonNameComplete:
                type: string
              seasonEnd:
                type: string
              sessionStartDay:
                type: string
              sessionEndDay:
                type: string
              sessionNameComplete:
                type: string
              ageStart:
                type: number
              ageEnd:
                type: number
              ageNameComplete:
                type: string
              ageId:
                type: string
              pageUrl:
                type: string
              objectSuggest:
                type: string
    GETSchoolAgeResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            ageNameComplete:
              type: string
            ageId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    DELETESchoolAgeResponse:
      allOf:
        - $ref: "#/components/schemas/DELETEClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            ageNameComplete:
              type: string
            ageId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    PATCHSiteUserRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setUserId:
              type: string
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setUserSite:
              type: string
            removeUserSite:
              type: string
            removeAllUserSite:
              type: string
            setUserReceiveEmails:
              type: boolean
            removeUserReceiveEmails:
              type: boolean
            removeAllUserReceiveEmails:
              type: boolean
            setSeeArchived:
              type: boolean
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setUserId:
              type: string
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setUserSite:
              type: string
            removeUserSite:
              type: string
            removeAllUserSite:
              type: string
            setUserReceiveEmails:
              type: boolean
            removeUserReceiveEmails:
              type: boolean
            removeAllUserReceiveEmails:
              type: boolean
            setSeeArchived:
              type: boolean
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    SearchPageSiteUserResponse:
      allOf:
        - type: string
    POSTSchoolBlockRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            blockKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            ageSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            ageStartDay:
              type: string
            sessionEndDay:
              type: string
            ageNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            blockTimeStart:
              type: string
            blockTimeEnd:
              type: string
            blockSunday:
              type: boolean
            blockMonday:
              type: boolean
            blockTuesday:
              type: boolean
            blockWednesday:
              type: boolean
            blockThursday:
              type: boolean
            blockFriday:
              type: boolean
            blockSaturday:
              type: boolean
            blockPricePerMonth:
              type: number
            blocNameComplete:
              type: string
            blocId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    POSTSchoolBlockResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            blockKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            ageSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            ageStartDay:
              type: string
            sessionEndDay:
              type: string
            ageNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            blockTimeStart:
              type: string
            blockTimeEnd:
              type: string
            blockSunday:
              type: boolean
            blockMonday:
              type: boolean
            blockTuesday:
              type: boolean
            blockWednesday:
              type: boolean
            blockThursday:
              type: boolean
            blockFriday:
              type: boolean
            blockSaturday:
              type: boolean
            blockPricePerMonth:
              type: number
            blocNameComplete:
              type: string
            blocId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    PATCHSchoolBlockRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setAnneeCle:
              type: number
            removeAnneeCle:
              type: number
            removeAllAnneeCle:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setSessionKey:
              type: number
            removeSessionKey:
              type: number
            removeAllSessionKey:
              type: number
            setAgeKey:
              type: number
            removeAgeKey:
              type: number
            removeAllAgeKey:
              type: number
            setBlockKey:
              type: number
            removeBlockKey:
              type: number
            removeAllBlockKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSessionSort:
              type: number
            removeSessionSort:
              type: number
            removeAllSessionSort:
              type: number
            setAgeSort:
              type: number
            removeAgeSort:
              type: number
            removeAllAgeSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setAgeStartDay:
              type: string
            removeAgeStartDay:
              type: string
            removeAllAgeStartDay:
              type: string
            setSessionEndDay:
              type: string
            removeSessionEndDay:
              type: string
            removeAllSessionEndDay:
              type: string
            setAgeNameComplete:
              type: string
            removeAgeNameComplete:
              type: string
            removeAllAgeNameComplete:
              type: string
            setAgeStart:
              type: number
            removeAgeStart:
              type: number
            removeAllAgeStart:
              type: number
            setAgeEnd:
              type: number
            removeAgeEnd:
              type: number
            removeAllAgeEnd:
              type: number
            setBlockTimeStart:
              type: string
            removeBlockTimeStart:
              type: string
            removeAllBlockTimeStart:
              type: string
            setBlockTimeEnd:
              type: string
            removeBlockTimeEnd:
              type: string
            removeAllBlockTimeEnd:
              type: string
            setBlockSunday:
              type: boolean
            removeBlockSunday:
              type: boolean
            removeAllBlockSunday:
              type: boolean
            setBlockMonday:
              type: boolean
            removeBlockMonday:
              type: boolean
            removeAllBlockMonday:
              type: boolean
            setBlockTuesday:
              type: boolean
            removeBlockTuesday:
              type: boolean
            removeAllBlockTuesday:
              type: boolean
            setBlockWednesday:
              type: boolean
            removeBlockWednesday:
              type: boolean
            removeAllBlockWednesday:
              type: boolean
            setBlockThursday:
              type: boolean
            removeBlockThursday:
              type: boolean
            removeAllBlockThursday:
              type: boolean
            setBlockFriday:
              type: boolean
            removeBlockFriday:
              type: boolean
            removeAllBlockFriday:
              type: boolean
            setBlockSaturday:
              type: boolean
            removeBlockSaturday:
              type: boolean
            removeAllBlockSaturday:
              type: boolean
            setBlockPricePerMonth:
              type: number
            removeBlockPricePerMonth:
              type: number
            removeAllBlockPricePerMonth:
              type: number
            setBlocNameComplete:
              type: string
            removeBlocNameComplete:
              type: string
            removeAllBlocNameComplete:
              type: string
            setBlocId:
              type: string
            removeBlocId:
              type: string
            removeAllBlocId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    PATCHSchoolBlockResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setAnneeCle:
              type: number
            removeAnneeCle:
              type: number
            removeAllAnneeCle:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setSessionKey:
              type: number
            removeSessionKey:
              type: number
            removeAllSessionKey:
              type: number
            setAgeKey:
              type: number
            removeAgeKey:
              type: number
            removeAllAgeKey:
              type: number
            setBlockKey:
              type: number
            removeBlockKey:
              type: number
            removeAllBlockKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSessionSort:
              type: number
            removeSessionSort:
              type: number
            removeAllSessionSort:
              type: number
            setAgeSort:
              type: number
            removeAgeSort:
              type: number
            removeAllAgeSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setAgeStartDay:
              type: string
            removeAgeStartDay:
              type: string
            removeAllAgeStartDay:
              type: string
            setSessionEndDay:
              type: string
            removeSessionEndDay:
              type: string
            removeAllSessionEndDay:
              type: string
            setAgeNameComplete:
              type: string
            removeAgeNameComplete:
              type: string
            removeAllAgeNameComplete:
              type: string
            setAgeStart:
              type: number
            removeAgeStart:
              type: number
            removeAllAgeStart:
              type: number
            setAgeEnd:
              type: number
            removeAgeEnd:
              type: number
            removeAllAgeEnd:
              type: number
            setBlockTimeStart:
              type: string
            removeBlockTimeStart:
              type: string
            removeAllBlockTimeStart:
              type: string
            setBlockTimeEnd:
              type: string
            removeBlockTimeEnd:
              type: string
            removeAllBlockTimeEnd:
              type: string
            setBlockSunday:
              type: boolean
            removeBlockSunday:
              type: boolean
            removeAllBlockSunday:
              type: boolean
            setBlockMonday:
              type: boolean
            removeBlockMonday:
              type: boolean
            removeAllBlockMonday:
              type: boolean
            setBlockTuesday:
              type: boolean
            removeBlockTuesday:
              type: boolean
            removeAllBlockTuesday:
              type: boolean
            setBlockWednesday:
              type: boolean
            removeBlockWednesday:
              type: boolean
            removeAllBlockWednesday:
              type: boolean
            setBlockThursday:
              type: boolean
            removeBlockThursday:
              type: boolean
            removeAllBlockThursday:
              type: boolean
            setBlockFriday:
              type: boolean
            removeBlockFriday:
              type: boolean
            removeAllBlockFriday:
              type: boolean
            setBlockSaturday:
              type: boolean
            removeBlockSaturday:
              type: boolean
            removeAllBlockSaturday:
              type: boolean
            setBlockPricePerMonth:
              type: number
            removeBlockPricePerMonth:
              type: number
            removeAllBlockPricePerMonth:
              type: number
            setBlocNameComplete:
              type: string
            removeBlocNameComplete:
              type: string
            removeAllBlocNameComplete:
              type: string
            setBlocId:
              type: string
            removeBlocId:
              type: string
            removeAllBlocId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    SearchSchoolBlockResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              schoolKey:
                type: number
              anneeCle:
                type: number
              seasonKey:
                type: number
              sessionKey:
                type: number
              ageKey:
                type: number
              blockKey:
                type: number
              enrollmentKeys:
                type: array
                items:
                  type: number
              educationSort:
                type: number
              schoolSort:
                type: number
              yearSort:
                type: number
              seasonSort:
                type: number
              sessionSort:
                type: number
              ageSort:
                type: number
              schoolNameComplete:
                type: string
              yearStart:
                type: string
              yearEnd:
                type: string
              seasonStartDay:
                type: string
              seasonSummer:
                type: boolean
              seasonWinter:
                type: boolean
              seasonEnrollmentFee:
                type: number
              seasonNameComplete:
                type: string
              ageStartDay:
                type: string
              sessionEndDay:
                type: string
              ageNameComplete:
                type: string
              ageStart:
                type: number
              ageEnd:
                type: number
              blockTimeStart:
                type: string
              blockTimeEnd:
                type: string
              blockSunday:
                type: boolean
              blockMonday:
                type: boolean
              blockTuesday:
                type: boolean
              blockWednesday:
                type: boolean
              blockThursday:
                type: boolean
              blockFriday:
                type: boolean
              blockSaturday:
                type: boolean
              blockPricePerMonth:
                type: number
              blocNameComplete:
                type: string
              blocId:
                type: string
              pageUrl:
                type: string
              objectSuggest:
                type: string
    GETSchoolBlockResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            blockKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            ageSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            ageStartDay:
              type: string
            sessionEndDay:
              type: string
            ageNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            blockTimeStart:
              type: string
            blockTimeEnd:
              type: string
            blockSunday:
              type: boolean
            blockMonday:
              type: boolean
            blockTuesday:
              type: boolean
            blockWednesday:
              type: boolean
            blockThursday:
              type: boolean
            blockFriday:
              type: boolean
            blockSaturday:
              type: boolean
            blockPricePerMonth:
              type: number
            blocNameComplete:
              type: string
            blocId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    DELETESchoolBlockResponse:
      allOf:
        - $ref: "#/components/schemas/DELETEClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            ageKey:
              type: number
            blockKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            ageSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            ageStartDay:
              type: string
            sessionEndDay:
              type: string
            ageNameComplete:
              type: string
            ageStart:
              type: number
            ageEnd:
              type: number
            blockTimeStart:
              type: string
            blockTimeEnd:
              type: string
            blockSunday:
              type: boolean
            blockMonday:
              type: boolean
            blockTuesday:
              type: boolean
            blockWednesday:
              type: boolean
            blockThursday:
              type: boolean
            blockFriday:
              type: boolean
            blockSaturday:
              type: boolean
            blockPricePerMonth:
              type: number
            blocNameComplete:
              type: string
            blocId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    SearchPageSchoolBlockResponse:
      allOf:
        - type: string
    POSTClusterRequest:
      allOf:
        - type: object
          properties:
            pk:
              type: number
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
    POSTClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: number
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
    PATCHClusterRequest:
      allOf:
        - type: object
          properties:
            setPk:
              type: number
            removePk:
              type: number
            removeAllPk:
              type: number
            setId:
              type: string
            removeId:
              type: string
            removeAllId:
              type: string
            setCreated:
              type: string
            removeCreated:
              type: string
            removeAllCreated:
              type: string
            setModified:
              type: string
            removeModified:
              type: string
            removeAllModified:
              type: string
            setArchived:
              type: boolean
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
    PATCHClusterResponse:
      allOf:
        - type: object
          properties:
            setPk:
              type: number
            removePk:
              type: number
            removeAllPk:
              type: number
            setId:
              type: string
            removeId:
              type: string
            removeAllId:
              type: string
            setCreated:
              type: string
            removeCreated:
              type: string
            removeAllCreated:
              type: string
            setModified:
              type: string
            removeModified:
              type: string
            removeAllModified:
              type: string
            setArchived:
              type: boolean
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
    SearchClusterResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              pk:
                type: number
              id:
                type: string
              created:
                type: string
              modified:
                type: string
              archived:
                type: boolean
              deleted:
                type: boolean
              classCanonicalName:
                type: string
              classSimpleName:
                type: string
              classCanonicalNames:
                type: array
                items:
                  type: string
    GETClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: number
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
    DELETEClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: number
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
    SearchPageClusterResponse:
      allOf:
        - type: string
    POSTSchoolRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            schoolKey:
              type: number
            childKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            ageGroupKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            yearKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            schoolName:
              type: string
            schoolPhoneNumber:
              type: string
            schoolAdministratorName:
              type: string
            schoolAddress:
              type: string
            objectSuggestWeight:
              type: number
            objectSuggest:
              type: string
            schoolNameShort:
              type: string
            schoolNameComplete:
              type: string
            schoolId:
              type: string
            pageUrl:
              type: string
            pageH1:
              type: string
    POSTSchoolResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            childKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            ageGroupKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            yearKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            schoolName:
              type: string
            schoolPhoneNumber:
              type: string
            schoolAdministratorName:
              type: string
            schoolAddress:
              type: string
            objectSuggestWeight:
              type: number
            objectSuggest:
              type: string
            schoolNameShort:
              type: string
            schoolNameComplete:
              type: string
            schoolId:
              type: string
            pageUrl:
              type: string
            pageH1:
              type: string
    PATCHSchoolRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setChildKeys:
              type: array
              items:
                type: number
            removeChildKeys:
              type: number
            removeAllChildKeys:
              type: array
              items:
                type: number
            addChildKeys:
              type: number
            addAllChildKeys:
              type: array
              items:
                type: number
            setBlockKeys:
              type: array
              items:
                type: number
            removeBlockKeys:
              type: number
            removeAllBlockKeys:
              type: array
              items:
                type: number
            addBlockKeys:
              type: number
            addAllBlockKeys:
              type: array
              items:
                type: number
            setAgeGroupKeys:
              type: array
              items:
                type: number
            removeAgeGroupKeys:
              type: number
            removeAllAgeGroupKeys:
              type: array
              items:
                type: number
            addAgeGroupKeys:
              type: number
            addAllAgeGroupKeys:
              type: array
              items:
                type: number
            setSessionKeys:
              type: array
              items:
                type: number
            removeSessionKeys:
              type: number
            removeAllSessionKeys:
              type: array
              items:
                type: number
            addSessionKeys:
              type: number
            addAllSessionKeys:
              type: array
              items:
                type: number
            setSeasonKeys:
              type: array
              items:
                type: number
            removeSeasonKeys:
              type: number
            removeAllSeasonKeys:
              type: array
              items:
                type: number
            addSeasonKeys:
              type: number
            addAllSeasonKeys:
              type: array
              items:
                type: number
            setYearKeys:
              type: array
              items:
                type: number
            removeYearKeys:
              type: number
            removeAllYearKeys:
              type: array
              items:
                type: number
            addYearKeys:
              type: number
            addAllYearKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setSchoolName:
              type: string
            removeSchoolName:
              type: string
            removeAllSchoolName:
              type: string
            setSchoolPhoneNumber:
              type: string
            removeSchoolPhoneNumber:
              type: string
            removeAllSchoolPhoneNumber:
              type: string
            setSchoolAdministratorName:
              type: string
            removeSchoolAdministratorName:
              type: string
            removeAllSchoolAdministratorName:
              type: string
            setSchoolAddress:
              type: string
            removeSchoolAddress:
              type: string
            removeAllSchoolAddress:
              type: string
            setObjectSuggestWeight:
              type: number
            removeObjectSuggestWeight:
              type: number
            removeAllObjectSuggestWeight:
              type: number
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setSchoolNameShort:
              type: string
            removeSchoolNameShort:
              type: string
            removeAllSchoolNameShort:
              type: string
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setSchoolId:
              type: string
            removeSchoolId:
              type: string
            removeAllSchoolId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setPageH1:
              type: string
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
    PATCHSchoolResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setChildKeys:
              type: array
              items:
                type: number
            removeChildKeys:
              type: number
            removeAllChildKeys:
              type: array
              items:
                type: number
            addChildKeys:
              type: number
            addAllChildKeys:
              type: array
              items:
                type: number
            setBlockKeys:
              type: array
              items:
                type: number
            removeBlockKeys:
              type: number
            removeAllBlockKeys:
              type: array
              items:
                type: number
            addBlockKeys:
              type: number
            addAllBlockKeys:
              type: array
              items:
                type: number
            setAgeGroupKeys:
              type: array
              items:
                type: number
            removeAgeGroupKeys:
              type: number
            removeAllAgeGroupKeys:
              type: array
              items:
                type: number
            addAgeGroupKeys:
              type: number
            addAllAgeGroupKeys:
              type: array
              items:
                type: number
            setSessionKeys:
              type: array
              items:
                type: number
            removeSessionKeys:
              type: number
            removeAllSessionKeys:
              type: array
              items:
                type: number
            addSessionKeys:
              type: number
            addAllSessionKeys:
              type: array
              items:
                type: number
            setSeasonKeys:
              type: array
              items:
                type: number
            removeSeasonKeys:
              type: number
            removeAllSeasonKeys:
              type: array
              items:
                type: number
            addSeasonKeys:
              type: number
            addAllSeasonKeys:
              type: array
              items:
                type: number
            setYearKeys:
              type: array
              items:
                type: number
            removeYearKeys:
              type: number
            removeAllYearKeys:
              type: array
              items:
                type: number
            addYearKeys:
              type: number
            addAllYearKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setSchoolName:
              type: string
            removeSchoolName:
              type: string
            removeAllSchoolName:
              type: string
            setSchoolPhoneNumber:
              type: string
            removeSchoolPhoneNumber:
              type: string
            removeAllSchoolPhoneNumber:
              type: string
            setSchoolAdministratorName:
              type: string
            removeSchoolAdministratorName:
              type: string
            removeAllSchoolAdministratorName:
              type: string
            setSchoolAddress:
              type: string
            removeSchoolAddress:
              type: string
            removeAllSchoolAddress:
              type: string
            setObjectSuggestWeight:
              type: number
            removeObjectSuggestWeight:
              type: number
            removeAllObjectSuggestWeight:
              type: number
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setSchoolNameShort:
              type: string
            removeSchoolNameShort:
              type: string
            removeAllSchoolNameShort:
              type: string
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setSchoolId:
              type: string
            removeSchoolId:
              type: string
            removeAllSchoolId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setPageH1:
              type: string
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
    SearchSchoolResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              schoolKey:
                type: number
              childKeys:
                type: array
                items:
                  type: number
              blockKeys:
                type: array
                items:
                  type: number
              ageGroupKeys:
                type: array
                items:
                  type: number
              sessionKeys:
                type: array
                items:
                  type: number
              seasonKeys:
                type: array
                items:
                  type: number
              yearKeys:
                type: array
                items:
                  type: number
              educationSort:
                type: number
              schoolSort:
                type: number
              schoolName:
                type: string
              schoolPhoneNumber:
                type: string
              schoolAdministratorName:
                type: string
              schoolAddress:
                type: string
              objectSuggestWeight:
                type: number
              objectSuggest:
                type: string
              schoolNameShort:
                type: string
              schoolNameComplete:
                type: string
              schoolId:
                type: string
              pageUrl:
                type: string
              pageH1:
                type: string
    GETSchoolResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            childKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            ageGroupKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            yearKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            schoolName:
              type: string
            schoolPhoneNumber:
              type: string
            schoolAdministratorName:
              type: string
            schoolAddress:
              type: string
            objectSuggestWeight:
              type: number
            objectSuggest:
              type: string
            schoolNameShort:
              type: string
            schoolNameComplete:
              type: string
            schoolId:
              type: string
            pageUrl:
              type: string
            pageH1:
              type: string
    DELETESchoolResponse:
      allOf:
        - $ref: "#/components/schemas/DELETEClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            childKeys:
              type: array
              items:
                type: number
            blockKeys:
              type: array
              items:
                type: number
            ageGroupKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            yearKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            schoolName:
              type: string
            schoolPhoneNumber:
              type: string
            schoolAdministratorName:
              type: string
            schoolAddress:
              type: string
            objectSuggestWeight:
              type: number
            objectSuggest:
              type: string
            schoolNameShort:
              type: string
            schoolNameComplete:
              type: string
            schoolId:
              type: string
            pageUrl:
              type: string
            pageH1:
              type: string
    SearchPageSchoolResponse:
      allOf:
        - type: string
    POSTSchoolYearRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            yearNameShort:
              type: string
            yearNameComplete:
              type: string
            yearId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    POSTSchoolYearResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            yearNameShort:
              type: string
            yearNameComplete:
              type: string
            yearId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    PATCHSchoolYearRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setYearKey:
              type: number
            removeYearKey:
              type: number
            removeAllYearKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setSeasonKeys:
              type: array
              items:
                type: number
            removeSeasonKeys:
              type: number
            removeAllSeasonKeys:
              type: array
              items:
                type: number
            addSeasonKeys:
              type: number
            addAllSeasonKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setYearNameShort:
              type: string
            removeYearNameShort:
              type: string
            removeAllYearNameShort:
              type: string
            setYearNameComplete:
              type: string
            removeYearNameComplete:
              type: string
            removeAllYearNameComplete:
              type: string
            setYearId:
              type: string
            removeYearId:
              type: string
            removeAllYearId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    PATCHSchoolYearResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setYearKey:
              type: number
            removeYearKey:
              type: number
            removeAllYearKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setSeasonKeys:
              type: array
              items:
                type: number
            removeSeasonKeys:
              type: number
            removeAllSeasonKeys:
              type: array
              items:
                type: number
            addSeasonKeys:
              type: number
            addAllSeasonKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setYearNameShort:
              type: string
            removeYearNameShort:
              type: string
            removeAllYearNameShort:
              type: string
            setYearNameComplete:
              type: string
            removeYearNameComplete:
              type: string
            removeAllYearNameComplete:
              type: string
            setYearId:
              type: string
            removeYearId:
              type: string
            removeAllYearId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    SearchSchoolYearResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              schoolKey:
                type: number
              yearKey:
                type: number
              enrollmentKeys:
                type: array
                items:
                  type: number
              seasonKeys:
                type: array
                items:
                  type: number
              educationSort:
                type: number
              schoolSort:
                type: number
              yearSort:
                type: number
              schoolNameComplete:
                type: string
              yearStart:
                type: string
              yearEnd:
                type: string
              yearNameShort:
                type: string
              yearNameComplete:
                type: string
              yearId:
                type: string
              pageUrl:
                type: string
              objectSuggest:
                type: string
    GETSchoolYearResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            yearNameShort:
              type: string
            yearNameComplete:
              type: string
            yearId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    DELETESchoolYearResponse:
      allOf:
        - $ref: "#/components/schemas/DELETEClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            seasonKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            yearNameShort:
              type: string
            yearNameComplete:
              type: string
            yearId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    SearchPageSchoolYearResponse:
      allOf:
        - type: string
    POSTSchoolSessionRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            ageKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            sessionId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    POSTSchoolSessionResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            ageKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            sessionId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    PATCHSchoolSessionRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setAnneeCle:
              type: number
            removeAnneeCle:
              type: number
            removeAllAnneeCle:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setSessionKey:
              type: number
            removeSessionKey:
              type: number
            removeAllSessionKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setAgeKeys:
              type: array
              items:
                type: number
            removeAgeKeys:
              type: number
            removeAllAgeKeys:
              type: array
              items:
                type: number
            addAgeKeys:
              type: number
            addAllAgeKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSessionSort:
              type: number
            removeSessionSort:
              type: number
            removeAllSessionSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setSeasonEnd:
              type: string
            removeSeasonEnd:
              type: string
            removeAllSeasonEnd:
              type: string
            setSessionStartDay:
              type: string
            removeSessionStartDay:
              type: string
            removeAllSessionStartDay:
              type: string
            setSessionEndDay:
              type: string
            removeSessionEndDay:
              type: string
            removeAllSessionEndDay:
              type: string
            setSessionNameComplete:
              type: string
            removeSessionNameComplete:
              type: string
            removeAllSessionNameComplete:
              type: string
            setSessionId:
              type: string
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    PATCHSchoolSessionResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setAnneeCle:
              type: number
            removeAnneeCle:
              type: number
            removeAllAnneeCle:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setSessionKey:
              type: number
            removeSessionKey:
              type: number
            removeAllSessionKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setAgeKeys:
              type: array
              items:
                type: number
            removeAgeKeys:
              type: number
            removeAllAgeKeys:
              type: array
              items:
                type: number
            addAgeKeys:
              type: number
            addAllAgeKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSessionSort:
              type: number
            removeSessionSort:
              type: number
            removeAllSessionSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setSeasonEnd:
              type: string
            removeSeasonEnd:
              type: string
            removeAllSeasonEnd:
              type: string
            setSessionStartDay:
              type: string
            removeSessionStartDay:
              type: string
            removeAllSessionStartDay:
              type: string
            setSessionEndDay:
              type: string
            removeSessionEndDay:
              type: string
            removeAllSessionEndDay:
              type: string
            setSessionNameComplete:
              type: string
            removeSessionNameComplete:
              type: string
            removeAllSessionNameComplete:
              type: string
            setSessionId:
              type: string
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    SearchSchoolSessionResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              schoolKey:
                type: number
              anneeCle:
                type: number
              seasonKey:
                type: number
              sessionKey:
                type: number
              enrollmentKeys:
                type: array
                items:
                  type: number
              ageKeys:
                type: array
                items:
                  type: number
              educationSort:
                type: number
              schoolSort:
                type: number
              yearSort:
                type: number
              seasonSort:
                type: number
              sessionSort:
                type: number
              schoolNameComplete:
                type: string
              yearStart:
                type: string
              yearEnd:
                type: string
              seasonStartDay:
                type: string
              seasonSummer:
                type: boolean
              seasonWinter:
                type: boolean
              seasonEnrollmentFee:
                type: number
              seasonNameComplete:
                type: string
              seasonEnd:
                type: string
              sessionStartDay:
                type: string
              sessionEndDay:
                type: string
              sessionNameComplete:
                type: string
              sessionId:
                type: string
              pageUrl:
                type: string
              objectSuggest:
                type: string
    GETSchoolSessionResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            ageKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            sessionId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    DELETESchoolSessionResponse:
      allOf:
        - $ref: "#/components/schemas/DELETEClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            anneeCle:
              type: number
            seasonKey:
              type: number
            sessionKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            ageKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            sessionSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonEnd:
              type: string
            sessionStartDay:
              type: string
            sessionEndDay:
              type: string
            sessionNameComplete:
              type: string
            sessionId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    SearchPageSchoolSessionResponse:
      allOf:
        - type: string
    POSTSchoolSeasonRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            seasonKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    POSTSchoolSeasonResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            seasonKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    PATCHSchoolSeasonRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setYearKey:
              type: number
            removeYearKey:
              type: number
            removeAllYearKey:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setSessionKeys:
              type: array
              items:
                type: number
            removeSessionKeys:
              type: number
            removeAllSessionKeys:
              type: array
              items:
                type: number
            addSessionKeys:
              type: number
            addAllSessionKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setSeasonId:
              type: string
            removeSeasonId:
              type: string
            removeAllSeasonId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    PATCHSchoolSeasonResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setSchoolKey:
              type: number
            removeSchoolKey:
              type: number
            removeAllSchoolKey:
              type: number
            setYearKey:
              type: number
            removeYearKey:
              type: number
            removeAllYearKey:
              type: number
            setSeasonKey:
              type: number
            removeSeasonKey:
              type: number
            removeAllSeasonKey:
              type: number
            setEnrollmentKeys:
              type: array
              items:
                type: number
            removeEnrollmentKeys:
              type: number
            removeAllEnrollmentKeys:
              type: array
              items:
                type: number
            addEnrollmentKeys:
              type: number
            addAllEnrollmentKeys:
              type: array
              items:
                type: number
            setSessionKeys:
              type: array
              items:
                type: number
            removeSessionKeys:
              type: number
            removeAllSessionKeys:
              type: array
              items:
                type: number
            addSessionKeys:
              type: number
            addAllSessionKeys:
              type: array
              items:
                type: number
            setEducationSort:
              type: number
            removeEducationSort:
              type: number
            removeAllEducationSort:
              type: number
            setSchoolSort:
              type: number
            removeSchoolSort:
              type: number
            removeAllSchoolSort:
              type: number
            setYearSort:
              type: number
            removeYearSort:
              type: number
            removeAllYearSort:
              type: number
            setSeasonSort:
              type: number
            removeSeasonSort:
              type: number
            removeAllSeasonSort:
              type: number
            setSchoolNameComplete:
              type: string
            removeSchoolNameComplete:
              type: string
            removeAllSchoolNameComplete:
              type: string
            setYearStart:
              type: string
            removeYearStart:
              type: string
            removeAllYearStart:
              type: string
            setYearEnd:
              type: string
            removeYearEnd:
              type: string
            removeAllYearEnd:
              type: string
            setSeasonStartDay:
              type: string
            removeSeasonStartDay:
              type: string
            removeAllSeasonStartDay:
              type: string
            setSeasonSummer:
              type: boolean
            removeSeasonSummer:
              type: boolean
            removeAllSeasonSummer:
              type: boolean
            setSeasonWinter:
              type: boolean
            removeSeasonWinter:
              type: boolean
            removeAllSeasonWinter:
              type: boolean
            setSeasonEnrollmentFee:
              type: number
            removeSeasonEnrollmentFee:
              type: number
            removeAllSeasonEnrollmentFee:
              type: number
            setSeasonNameComplete:
              type: string
            removeSeasonNameComplete:
              type: string
            removeAllSeasonNameComplete:
              type: string
            setSeasonId:
              type: string
            removeSeasonId:
              type: string
            removeAllSeasonId:
              type: string
            setPageUrl:
              type: string
            removePageUrl:
              type: string
            removeAllPageUrl:
              type: string
            setObjectSuggest:
              type: string
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
    SearchSchoolSeasonResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              schoolKey:
                type: number
              yearKey:
                type: number
              seasonKey:
                type: number
              enrollmentKeys:
                type: array
                items:
                  type: number
              sessionKeys:
                type: array
                items:
                  type: number
              educationSort:
                type: number
              schoolSort:
                type: number
              yearSort:
                type: number
              seasonSort:
                type: number
              schoolNameComplete:
                type: string
              yearStart:
                type: string
              yearEnd:
                type: string
              seasonStartDay:
                type: string
              seasonSummer:
                type: boolean
              seasonWinter:
                type: boolean
              seasonEnrollmentFee:
                type: number
              seasonNameComplete:
                type: string
              seasonId:
                type: string
              pageUrl:
                type: string
              objectSuggest:
                type: string
    GETSchoolSeasonResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            seasonKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    DELETESchoolSeasonResponse:
      allOf:
        - $ref: "#/components/schemas/DELETEClusterResponse"
        - type: object
          properties:
            schoolKey:
              type: number
            yearKey:
              type: number
            seasonKey:
              type: number
            enrollmentKeys:
              type: array
              items:
                type: number
            sessionKeys:
              type: array
              items:
                type: number
            educationSort:
              type: number
            schoolSort:
              type: number
            yearSort:
              type: number
            seasonSort:
              type: number
            schoolNameComplete:
              type: string
            yearStart:
              type: string
            yearEnd:
              type: string
            seasonStartDay:
              type: string
            seasonSummer:
              type: boolean
            seasonWinter:
              type: boolean
            seasonEnrollmentFee:
              type: number
            seasonNameComplete:
              type: string
            seasonId:
              type: string
            pageUrl:
              type: string
            objectSuggest:
              type: string
    SearchPageSchoolSeasonResponse:
      allOf:
        - type: string
    ErrorResponse:
      required:
        - type
        - code
      properties:
        type:
          type: string
          enum:
            - ERROR
            - WARN
            - INVALID
            - FATAL
          description: >+
            <br>invalid - Request did not confirm to the specification and was
            unprocessed & rejected. Please fix the value and try again</br>       
            <br>warn - Request was partially processed.  E.g. some of the fields
            are missing in response to the system issues,  request was accepted
            successfully but will be processed asynchronously</br>                
            <br>error - The request was accepted but could not be processed
            successfully</br>            <br>fatal - There was an internal system
            error while processing the request. These are technical errors and
            will be resolved by Citi, and the consumer should retry after some
            time. Business errors will not be categorized as fatal </br>
        code:
          type: string
          description: Error code which qualifies the error. 
        details:
          type: string
          description: Human readable explanation specific to the occurrence of the problem. 
        location:
          type: string
          description: The name of the field that resulted in the error. 
        moreInfo:
          type: string
          description: URI to human readable documentation of the error. 
